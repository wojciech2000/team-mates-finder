[{"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\index.js":"1","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\App.js":"2","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\context\\AuthRoute.js":"3","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\context\\auth.js":"4","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Header\\Header.js":"5","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Players\\Players.js":"6","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Team\\Team.js":"7","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Player\\Player.js":"8","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Login\\Login.js":"9","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Register\\Register.js":"10","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\UserHome\\UserHome.js":"11","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\CreateTeam\\CreateTeam.js":"12","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Teams\\Teams.js":"13","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\UserProfile\\UserProfile.js":"14","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\EditTeam\\EditTeam.js":"15","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\queries.js":"16","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Messages\\Messages.js":"17","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\context\\infoContext.js":"18","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\utils\\useUpdate.js":"19","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\utils\\useUserMutation.js":"20","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\BackArrow\\BackArrow.js":"21","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\InfoModel\\InfoModel.js":"22"},{"size":176,"mtime":1608477695299,"results":"23","hashOfConfig":"24"},{"size":2519,"mtime":1615653344530,"results":"25","hashOfConfig":"24"},{"size":410,"mtime":1608119316778,"results":"26","hashOfConfig":"24"},{"size":1879,"mtime":1615481421839,"results":"27","hashOfConfig":"24"},{"size":1523,"mtime":1615647627290,"results":"28","hashOfConfig":"24"},{"size":3608,"mtime":1615647627295,"results":"29","hashOfConfig":"24"},{"size":4122,"mtime":1612442965151,"results":"30","hashOfConfig":"24"},{"size":4455,"mtime":1615647627294,"results":"31","hashOfConfig":"24"},{"size":2462,"mtime":1615647627293,"results":"32","hashOfConfig":"24"},{"size":5315,"mtime":1615647963030,"results":"33","hashOfConfig":"24"},{"size":672,"mtime":1610108467763,"results":"34","hashOfConfig":"24"},{"size":5553,"mtime":1612442965133,"results":"35","hashOfConfig":"24"},{"size":3059,"mtime":1612442965153,"results":"36","hashOfConfig":"24"},{"size":15465,"mtime":1615647627297,"results":"37","hashOfConfig":"24"},{"size":13090,"mtime":1612442965133,"results":"38","hashOfConfig":"24"},{"size":6233,"mtime":1615649145318,"results":"39","hashOfConfig":"24"},{"size":6193,"mtime":1615651994932,"results":"40","hashOfConfig":"24"},{"size":436,"mtime":1610295315648,"results":"41","hashOfConfig":"24"},{"size":414,"mtime":1615224409453,"results":"42","hashOfConfig":"24"},{"size":1129,"mtime":1615647627299,"results":"43","hashOfConfig":"24"},{"size":340,"mtime":1615647627289,"results":"44","hashOfConfig":"24"},{"size":1028,"mtime":1615647627291,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"7zjnmv",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\index.js",[],["93","94"],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\App.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\context\\AuthRoute.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\context\\auth.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Players\\Players.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Team\\Team.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Player\\Player.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Login\\Login.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Register\\Register.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\UserHome\\UserHome.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\CreateTeam\\CreateTeam.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Teams\\Teams.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\UserProfile\\UserProfile.js",["95"],"import React, {Fragment, useContext, useEffect, useState} from \"react\";\r\nimport {useQuery} from \"@apollo/client\";\r\n\r\nimport {\r\n  GET_USER_PROFILE,\r\n  UPDATE_NICK,\r\n  UPDATE_SERVER,\r\n  UPDATE_POSITION,\r\n  UPDATE_MAIN_CHAMPIONS,\r\n} from \"../../queries\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport {InfoContext} from \"../../context/infoContext\";\r\nimport loadingGif from \"../../pictures/loading.gif\";\r\nimport useUserMutation from \"../../utils/useUserMutation\";\r\n\r\nexport default function UserProfile(props) {\r\n  const {setMessages, setIsMessageError} = useContext(InfoContext);\r\n  const id = props.location.id;\r\n\r\n  const {loading, data, error} = useQuery(GET_USER_PROFILE, {variables: {id}});\r\n\r\n  const [editInput, setEditInput] = useState({\r\n    nick: false,\r\n    server: false,\r\n    positions: false,\r\n    champions: false,\r\n  });\r\n\r\n  const [editValue, setEditValue] = useState({});\r\n\r\n  //UPDATE LOCAL STATE\r\n  const restEditValue = () => {\r\n    setEditValue({\r\n      nick: data.getUser.nick,\r\n      server: data.getUser.server.serverName,\r\n      primary: data.getUser.position.primary,\r\n      secondary: data.getUser.position.secondary,\r\n      champions: data.getUser.mainChampions,\r\n      team: data.getUser.team ? data.getUser.team.name : \"\",\r\n    });\r\n  };\r\n\r\n  const startEditValue = e => {\r\n    //if user had opened some diffrent input and provide changes\r\n    restEditValue();\r\n\r\n    //close all edits\r\n    Object.keys(editInput).forEach(key => (editInput[key] = false));\r\n\r\n    //set edit\r\n    setEditInput({...editInput, [e.target.id]: true});\r\n  };\r\n\r\n  const cancelEditValue = e => {\r\n    //user didn't do any changes reset state\r\n    restEditValue();\r\n    setEditInput({...editInput, [e.target.id]: false});\r\n  };\r\n\r\n  const onChangeInput = (e, id) => {\r\n    //update array champions\r\n    if (id || id === 0) {\r\n      const update = editValue.champions.map((value, idArray) =>\r\n        idArray === id ? e.target.value : value,\r\n      );\r\n\r\n      setEditValue({\r\n        ...editValue,\r\n        champions: update,\r\n      });\r\n    } else {\r\n      //update single text\r\n      setEditValue({...editValue, [e.target.name]: e.target.value});\r\n    }\r\n  };\r\n\r\n  const addNewChampion = () => {\r\n    if (editValue.champions.length >= 4) {\r\n      setIsMessageError(true);\r\n      setMessages({message: \"You can have only 4 mains\"});\r\n    } else {\r\n      setEditValue({\r\n        ...editValue,\r\n        champions: [...editValue.champions, \"\"],\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteChampion = id => {\r\n    setEditValue({\r\n      ...editValue,\r\n      champions: editValue.champions.filter((champ, arrayId) => arrayId !== id),\r\n    });\r\n  };\r\n\r\n  //UPDATE DATA IN THE SERVER\r\n\r\n  //NICK\r\n  const updateNick = useUserMutation(\r\n    UPDATE_NICK,\r\n    {nick: editValue.nick},\r\n    \"Updated nick\",\r\n    id,\r\n    \"nick\",\r\n    editInput,\r\n    setEditInput,\r\n  );\r\n\r\n  const saveDataNick = e => {\r\n    updateNick();\r\n  };\r\n\r\n  //SERVER\r\n  const updateServer = useUserMutation(\r\n    UPDATE_SERVER,\r\n    {server: editValue.server},\r\n    \"Updated server\",\r\n    id,\r\n    \"server\",\r\n    editInput,\r\n    setEditInput,\r\n  );\r\n\r\n  const saveDataServer = e => {\r\n    updateServer();\r\n  };\r\n\r\n  //POSITIONS\r\n  const updatePositons = useUserMutation(\r\n    UPDATE_POSITION,\r\n    {primary: editValue.primary, secondary: editValue.secondary},\r\n    \"Updated positions\",\r\n    id,\r\n    \"positions\",\r\n    editInput,\r\n    setEditInput,\r\n  );\r\n\r\n  const saveDataPosition = e => {\r\n    updatePositons();\r\n  };\r\n\r\n  //MAIN CHAMPIONS\r\n  const updateChampions = useUserMutation(\r\n    UPDATE_MAIN_CHAMPIONS,\r\n    {champions: editValue.champions},\r\n    \"Updated main champions\",\r\n    id,\r\n    \"champions\",\r\n    editInput,\r\n    setEditInput,\r\n  );\r\n\r\n  const saveDataChampions = e => {\r\n    updateChampions();\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      {loading ? (\r\n        <div className=\"loading-wrapper\">\r\n          <img src={loadingGif} alt=\"loading\" />\r\n        </div>\r\n      ) : error ? (\r\n        \"Error...\"\r\n      ) : (\r\n        data && (\r\n          <div className=\"profile\">\r\n            <div className=\"profile__data-wrapper\">\r\n              <div className=\"profile__data\">\r\n                <label\r\n                  className=\"profile__description\"\r\n                  htmlFor={editInput.nick ? \"nick\" : \"\"}\r\n                  data-testid=\"nickLabel\"\r\n                >\r\n                  Nick:{\" \"}\r\n                </label>\r\n                {editInput.nick ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"nick\"\r\n                    name=\"nick\"\r\n                    value={editValue.nick}\r\n                    className=\"profile__input\"\r\n                    onChange={e => onChangeInput(e)}\r\n                    data-testid=\"nickInput\"\r\n                  />\r\n                ) : (\r\n                  <span className=\"profile__content\">{data.getUser.nick}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"profile__edit-wrapper\">\r\n                {editInput.nick ? (\r\n                  <Fragment>\r\n                    <button className=\"profile__cancel\" id=\"nick\" onClick={e => cancelEditValue(e)}>\r\n                      cancel\r\n                    </button>\r\n                    <button\r\n                      className=\"profile__save\"\r\n                      id=\"nick\"\r\n                      onClick={e => saveDataNick(e)}\r\n                      data-testid=\"saveNick\"\r\n                    >\r\n                      save\r\n                    </button>\r\n                  </Fragment>\r\n                ) : (\r\n                  <button\r\n                    className=\"profile__edit\"\r\n                    id=\"nick\"\r\n                    onClick={e => startEditValue(e)}\r\n                    data-testid=\"editNick\"\r\n                  >\r\n                    edit\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"profile__data-wrapper\">\r\n              <div className=\"profile__data\">\r\n                <label className=\"profile__description\" htmlFor={editInput.server ? \"server\" : \"\"}>\r\n                  Server:{\" \"}\r\n                </label>\r\n                {editInput.server ? (\r\n                  <select\r\n                    className=\"profile__input\"\r\n                    id=\"server\"\r\n                    name=\"server\"\r\n                    value={editValue.server}\r\n                    onChange={e => onChangeInput(e)}\r\n                  >\r\n                    <option value=\"BR\">Brazil</option>\r\n                    <option value=\"EUNE\">Europe Nordic East</option>\r\n                    <option value=\"EUW\">Europe West </option>\r\n                    <option value=\"LAN\">Latin America North</option>\r\n                    <option value=\"LAS\">Latin America South</option>\r\n                    <option value=\"NA\">North America</option>\r\n                    <option value=\"OCE\">Oceania</option>\r\n                    <option value=\"RU\">Russia</option>\r\n                    <option value=\"TR\">Tureky</option>\r\n                    <option value=\"JP\">Japan </option>\r\n                    <option value=\"KR\">Korea</option>\r\n                  </select>\r\n                ) : (\r\n                  <span className=\"profile__content\">{data.getUser.server.serverName}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"profile__edit-wrapper\">\r\n                {editInput.server ? (\r\n                  <Fragment>\r\n                    <button\r\n                      className=\"profile__cancel\"\r\n                      id=\"server\"\r\n                      onClick={e => cancelEditValue(e)}\r\n                    >\r\n                      cancel\r\n                    </button>\r\n                    <button className=\"profile__save\" id=\"server\" onClick={e => saveDataServer(e)}>\r\n                      save\r\n                    </button>\r\n                  </Fragment>\r\n                ) : (\r\n                  <button className=\"profile__edit\" id=\"server\" onClick={e => startEditValue(e)}>\r\n                    edit\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"profile__data-wrapper\">\r\n              <div className=\"profile__data\">\r\n                <span className=\"profile__description\">Positions: </span>\r\n\r\n                {editInput.positions ? (\r\n                  <div className=\"profile__inputs-positions\">\r\n                    <select\r\n                      className=\"profile__input profile__input--position\"\r\n                      name=\"primary\"\r\n                      value={editValue.primary}\r\n                      onChange={e => onChangeInput(e)}\r\n                    >\r\n                      <option value=\"Top\">Top</option>\r\n                      <option value=\"Jungle\">Jungle</option>\r\n                      <option value=\"Mid\">Mid</option>\r\n                      <option value=\"ADC\">ADC</option>\r\n                      <option value=\"Supp\">Supp</option>\r\n                    </select>\r\n                    <select\r\n                      className=\"profile__input profile__input--position\"\r\n                      placeholder=\"Positions...\"\r\n                      name=\"secondary\"\r\n                      value={editValue.secondary}\r\n                      onChange={e => onChangeInput(e)}\r\n                    >\r\n                      <option value=\"Top\">Top</option>\r\n                      <option value=\"Jungle\">Jungle</option>\r\n                      <option value=\"Mid\">Mid</option>\r\n                      <option value=\"ADC\">ADC</option>\r\n                      <option value=\"Supp\">Supp</option>\r\n                    </select>\r\n                  </div>\r\n                ) : (\r\n                  <span className=\"profile__content\">\r\n                    {data.getUser.position.primary + \" | \" + data.getUser.position.secondary}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <div className=\"profile__edit-wrapper\">\r\n                {editInput.positions ? (\r\n                  <Fragment>\r\n                    <button\r\n                      className=\"profile__cancel\"\r\n                      id=\"positions\"\r\n                      onClick={e => cancelEditValue(e)}\r\n                    >\r\n                      cancel\r\n                    </button>\r\n                    <button className=\"profile__save\" id=\"positions\" onClick={saveDataPosition}>\r\n                      save\r\n                    </button>\r\n                  </Fragment>\r\n                ) : (\r\n                  <button className=\"profile__edit\" id=\"positions\" onClick={e => startEditValue(e)}>\r\n                    edit\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"profile__data-wrapper\">\r\n              <div className=\"profile__data\">\r\n                <span className=\"profile__description\">Mains: </span>\r\n                <span className=\"profile__content profile__content--champs\">\r\n                  {editInput.champions ? (\r\n                    <div className=\"profile__inputs-champs-wrapper\">\r\n                      <div className=\"profile__inputs-champs\">\r\n                        {editValue.champions.map((champ, id) => (\r\n                          <div className=\"profile__inputs-champs-edit-delete-wrapper\" key={id}>\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"champions\"\r\n                              placeholder=\"Name...\"\r\n                              value={editValue.champions[id]}\r\n                              onChange={e => onChangeInput(e, id)}\r\n                              className=\"profile__input\"\r\n                            />\r\n                            <button\r\n                              className=\"profile__button-delete-champ\"\r\n                              onClick={() => deleteChampion(id)}\r\n                            >\r\n                              -\r\n                            </button>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                      <button className=\"profile__button-add-champ\" onClick={addNewChampion}>\r\n                        +\r\n                      </button>\r\n                    </div>\r\n                  ) : data.getUser.mainChampions.length === 0 ? (\r\n                    \"none...\"\r\n                  ) : (\r\n                    data.getUser.mainChampions.map((champ, id) =>\r\n                      id === 0 ? champ + \" \" : \" | \" + champ,\r\n                    )\r\n                  )}\r\n                </span>\r\n              </div>\r\n              <div className=\"profile__edit-wrapper\">\r\n                {editInput.champions ? (\r\n                  <Fragment>\r\n                    <button\r\n                      className=\"profile__cancel\"\r\n                      id=\"champions\"\r\n                      onClick={e => cancelEditValue(e)}\r\n                    >\r\n                      cancel\r\n                    </button>\r\n                    <button\r\n                      className=\"profile__save\"\r\n                      id=\"champions\"\r\n                      onClick={e => saveDataChampions(e)}\r\n                    >\r\n                      save\r\n                    </button>\r\n                  </Fragment>\r\n                ) : (\r\n                  <button className=\"profile__edit\" id=\"champions\" onClick={e => startEditValue(e)}>\r\n                    edit\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"profile__data-wrapper\">\r\n              <div className=\"profile__data\">\r\n                <span className=\"profile__description\">Team: </span>\r\n                <span className=\"profile__content\">\r\n                  {!data.getUser.team ? \"none...\" : data.getUser.team.name}\r\n                </span>\r\n              </div>\r\n              <button className=\"profile__edit\">\r\n                {!data.getUser.team ? (\r\n                  <Link to=\"/create-team\">create team</Link>\r\n                ) : (\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/edit-team/${data.getUser.team.name}`,\r\n                      id: data.getUser.team.id,\r\n                      userId: data.getUser.id,\r\n                    }}\r\n                  >\r\n                    edit\r\n                  </Link>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\EditTeam\\EditTeam.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\queries.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\Messages\\Messages.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\context\\infoContext.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\utils\\useUpdate.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\utils\\useUserMutation.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\BackArrow\\BackArrow.js",[],"C:\\Users\\anton\\Desktop\\tmf\\client\\src\\components\\InfoModel\\InfoModel.js",["96"],"import React, {useEffect, useContext} from \"react\";\r\nimport {AnimatePresence, motion} from \"framer-motion\";\r\n\r\nimport {InfoContext} from \"../../context/infoContext\";\r\n\r\nexport default function InfoModel() {\r\n  const {messages, setMessages, isMessageError} = useContext(InfoContext);\r\n\r\n  useEffect(() => {\r\n    Object.values(messages).length > 0 && setMessages(messages);\r\n\r\n    const hide = setTimeout(() => {\r\n      Object.values(messages).length > 0 && setMessages({});\r\n    }, 2500);\r\n\r\n    return () => {\r\n      clearTimeout(hide);\r\n    };\r\n  }, [messages]);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {Object.values(messages).length > 0 && (\r\n        <motion.aside\r\n          className={isMessageError ? \"info--red\" : \"info--green\"}\r\n          initial={{y: 100}}\r\n          animate={{y: 0}}\r\n          exit={{opacity: 0}}\r\n        >\r\n          {Object.values(messages).map((message, id) => (\r\n            <span key={id}>{message}</span>\r\n          ))}\r\n        </motion.aside>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n}\r\n",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":38,"nodeType":"103","messageId":"104","endLine":1,"endColumn":47},{"ruleId":"105","severity":1,"message":"106","line":19,"column":6,"nodeType":"107","endLine":19,"endColumn":16,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setMessages'. Either include it or remove the dependency array.","ArrayExpression",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [messages, setMessages]",{"range":"114","text":"115"},[551,561],"[messages, setMessages]"]